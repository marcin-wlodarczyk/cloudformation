AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Domain:
    Type: String
    Description: Hosted zone of your existing domain. (e.g "mydomain.com")
  DistributionOriginId:
    Type: String
    Default: 'S3OriginWebsite'
    Description: Use this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior.
    ConstraintDescription: A unique identifier for the origin. This value must be unique within the distribution.
  AcmCertificateArn:
    Type: String
  AcmCertificateCNAME:
    Type: String
    Description: When you choose DNS validation, ACM provides you with one or more CNAME records that must be added to this database. These records contain a unique key-value pair that serves as proof that you control the domain.
  AcmCertificateCNAMEValue:
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Domain Configuration"
        Parameters:
          - Domain
          - DistributionOriginId
      - Label:
          default: "AWS Certificate Manager SSL/TLS Configuration"
        Parameters:
          - AcmCertificateArn
          - AcmCertificateCNAME
          - AcmCertificateCNAMEValue
    ParameterLabels:
      AcmCertificateArn:
        default: "Request a public SSL/TLS certificate and copy its ARN here"

Resources:
  ReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Website
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Join ['', [ 'arn:aws:s3:::', !Ref S3Website, '/*' ]]
            Principal:
              CanonicalUser: !GetAtt OriginAccessId.S3CanonicalUserId

  OriginAccessId:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allow CloudFront to access S3 bucket

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref Domain
        Origins:
          - DomainName: !GetAtt S3Website.RegionalDomainName
            Id: !Ref DistributionOriginId
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${OriginAccessId}'
        DefaultRootObject: index.html
        Enabled: true
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: !Ref DistributionOriginId
          CachePolicyId: '658327ea-f89d-4fab-a63d-7e88639e58f6' # From docs https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100 # More about it here -> https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only # recommended

  S3Website:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Domain}' # Use same bucket name as domain
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  DNSRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Join ['', [!Ref Domain, '.']]
      RecordSets:
        - Name: !Join ['', [!Ref Domain, '.']]
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # Static value from docs: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget-1.html#cfn-route53-aliastarget-hostedzoneid
        - Name: !Ref AcmCertificateCNAME # SSL Domain validation
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !Ref AcmCertificateCNAMEValue
